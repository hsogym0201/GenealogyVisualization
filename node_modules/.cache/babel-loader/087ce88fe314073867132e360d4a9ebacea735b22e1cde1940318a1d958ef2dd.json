{"ast":null,"code":"// 确保导入 TagCanvas 库，如果是从 CDN 加载，需确保它已经加载。\nimport TagCanvas from \"tag-canvas\"; // 确保你安装了这个库并正确引入\n\nexport default {\n  data: function () {\n    return {};\n  },\n  props: {\n    wordArr: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    // 启动词云\n    startWorldCloud: function (updateFlag) {\n      this.createTagListDom();\n      let o = {\n        maxSpeed: 0.01,\n        minSpeed: 0.01,\n        textHeight: 25,\n        outlineMethod: \"colour\",\n        fadeIn: 800,\n        outlineColour: \"#fff456aa\",\n        outlineOffset: 0,\n        depth: 0.97,\n        minBrightness: 0.2,\n        wheelZoom: false,\n        reverse: true,\n        shadowBlur: 2,\n        shuffleTags: true,\n        shadowOffset: [1, 1],\n        stretchX: 2,\n        // 水平方向更大\n        stretchY: 1,\n        // 垂直方向更大\n        initial: [0.1, 0.1],\n        textFont: null,\n        textColour: null,\n        weight: true,\n        weightMode: \"size\",\n        weightSize: 1\n      };\n      try {\n        if (!updateFlag) {\n          TagCanvas.Start(\"world-cloud-canvas\", \"weightTags\", o);\n        } else {\n          TagCanvas.Update(\"world-cloud-canvas\");\n        }\n\n        // 在 Canvas 上监听 mouseover 和 mouseout 事件\n        const canvas = document.getElementById(\"world-cloud-canvas\");\n        canvas.addEventListener(\"mousemove\", this.onMouseMove);\n        canvas.addEventListener(\"mouseout\", this.onMouseOut);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    // 根据父组件传过来的 wordArr 创建 TagList Dom列表，放到页面中供 canvas 渲染\n    createTagListDom: function () {\n      let res = [...this.wordArr];\n      let fragment = new DocumentFragment();\n      for (let i = 0; i < res.length; i++) {\n        let a = document.createElement(\"a\");\n\n        // 字符串长度大于10就要换行\n        if (res[i].name.length > 10) {\n          let charArr = res[i].name.split(\"\");\n          charArr.splice(10, 0, \"<br>\");\n          res[i].name = charArr.join(\"\");\n        }\n        a.innerHTML = res[i].name;\n        a.href = \"javascript:void(0)\";\n\n        // 数据前十名/数据10-20/数据20-30\n        if (res[i].light === \"large\") {\n          a.className = \"large\";\n        } else if (res[i].light === \"medium\") {\n          a.className = \"medium\";\n        } else if (res[i].light === \"small\") {\n          a.className = \"small\";\n        }\n\n        // 为每个词添加点击事件，触发反馈信息\n        a.addEventListener(\"click\", () => {\n          this.$emit(\"word-clicked\", res[i]);\n        });\n        fragment.append(a);\n      }\n      let tagsContainer = document.querySelector(\"#weightTags\");\n      tagsContainer.innerHTML = \"\";\n      tagsContainer.append(fragment);\n    },\n    // 鼠标悬停时触发 tooltip\n    onMouseMove: function (event) {\n      const canvas = document.getElementById(\"world-cloud-canvas\");\n      const tags = TagCanvas.tags; // 获取TagCanvas上的所有tag\n\n      for (let i = 0; i < tags.length; i++) {\n        const tag = tags[i];\n        const rect = tag.rect; // 获取每个 tag 的位置和尺寸\n\n        if (event.clientX >= rect[0] && event.clientX <= rect[0] + rect[2] && event.clientY >= rect[1] && event.clientY <= rect[1] + rect[3]) {\n          // 如果鼠标在当前词上\n          const tooltip = document.getElementById(\"tooltip\");\n          tooltip.innerHTML = `词语: ${tag.name}<br>更多信息: ${tag.extraInfo || '无'}`;\n          tooltip.style.display = \"block\"; // 显示 tooltip\n          tooltip.style.left = `${event.clientX + 10}px`;\n          tooltip.style.top = `${event.clientY + 10}px`;\n          break;\n        }\n      }\n    },\n    // 鼠标移出时隐藏 tooltip\n    onMouseOut: function () {\n      const tooltip = document.getElementById(\"tooltip\");\n      tooltip.style.display = \"none\"; // 隐藏 tooltip\n    }\n  },\n  watch: {\n    // 如果词云发生变化就要重绘 tagcanvas\n    wordArr: function () {\n      this.startWorldCloud(true);\n    }\n  },\n  mounted() {\n    // 组件装载成果 绘制 tagcanvas\n    this.startWorldCloud();\n  }\n};","map":{"version":3,"names":["TagCanvas","data","props","wordArr","type","Array","default","methods","startWorldCloud","updateFlag","createTagListDom","o","maxSpeed","minSpeed","textHeight","outlineMethod","fadeIn","outlineColour","outlineOffset","depth","minBrightness","wheelZoom","reverse","shadowBlur","shuffleTags","shadowOffset","stretchX","stretchY","initial","textFont","textColour","weight","weightMode","weightSize","Start","Update","canvas","document","getElementById","addEventListener","onMouseMove","onMouseOut","e","console","error","res","fragment","DocumentFragment","i","length","a","createElement","name","charArr","split","splice","join","innerHTML","href","light","className","$emit","append","tagsContainer","querySelector","event","tags","tag","rect","clientX","clientY","tooltip","extraInfo","style","display","left","top","watch","mounted"],"sources":["D:\\project\\idea-project\\jiapudemo1\\jiapudemo1\\src\\components\\CiYun.vue"],"sourcesContent":["<template>\r\n  <div class=\"world-cloud-3d\">\r\n    <div class=\"world-cloud-canvas-wrapper\">\r\n      <canvas\r\n          id=\"world-cloud-canvas\"\r\n          width=\"800\"\r\n          height=\"400\"\r\n          style=\"width: 100%; max-width: 600px\"\r\n      ></canvas>\r\n    </div>\r\n    <div style=\"display: none\" id=\"weightTags\"></div>\r\n\r\n    <!-- Tooltip 弹窗 -->\r\n    <div id=\"tooltip\" style=\"position: absolute; display: none; background-color: rgba(0, 0, 0, 0.7); color: white; padding: 5px; border-radius: 5px; pointer-events: none;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 确保导入 TagCanvas 库，如果是从 CDN 加载，需确保它已经加载。\r\nimport TagCanvas from \"tag-canvas\"; // 确保你安装了这个库并正确引入\r\n\r\nexport default {\r\n  data: function () {\r\n    return {};\r\n  },\r\n  props: {\r\n    wordArr: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n  },\r\n  methods: {\r\n    // 启动词云\r\n    startWorldCloud: function (updateFlag) {\r\n      this.createTagListDom();\r\n      let o = {\r\n        maxSpeed: 0.01,\r\n        minSpeed: 0.01,\r\n        textHeight: 25,\r\n        outlineMethod: \"colour\",\r\n        fadeIn: 800,\r\n        outlineColour: \"#fff456aa\",\r\n        outlineOffset: 0,\r\n        depth: 0.97,\r\n        minBrightness: 0.2,\r\n        wheelZoom: false,\r\n        reverse: true,\r\n        shadowBlur: 2,\r\n        shuffleTags: true,\r\n        shadowOffset: [1, 1],\r\n        stretchX: 2, // 水平方向更大\r\n        stretchY: 1, // 垂直方向更大\r\n        initial: [0.1, 0.1],\r\n        textFont: null,\r\n        textColour: null,\r\n        weight: true,\r\n        weightMode: \"size\",\r\n        weightSize: 1,\r\n      };\r\n      try {\r\n        if (!updateFlag) {\r\n          TagCanvas.Start(\"world-cloud-canvas\", \"weightTags\", o);\r\n        } else {\r\n          TagCanvas.Update(\"world-cloud-canvas\");\r\n        }\r\n\r\n        // 在 Canvas 上监听 mouseover 和 mouseout 事件\r\n        const canvas = document.getElementById(\"world-cloud-canvas\");\r\n        canvas.addEventListener(\"mousemove\", this.onMouseMove);\r\n        canvas.addEventListener(\"mouseout\", this.onMouseOut);\r\n\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    // 根据父组件传过来的 wordArr 创建 TagList Dom列表，放到页面中供 canvas 渲染\r\n    createTagListDom: function () {\r\n      let res = [...this.wordArr];\r\n      let fragment = new DocumentFragment();\r\n      for (let i = 0; i < res.length; i++) {\r\n        let a = document.createElement(\"a\");\r\n\r\n        // 字符串长度大于10就要换行\r\n        if (res[i].name.length > 10) {\r\n          let charArr = res[i].name.split(\"\");\r\n          charArr.splice(10, 0, \"<br>\");\r\n          res[i].name = charArr.join(\"\");\r\n        }\r\n\r\n        a.innerHTML = res[i].name;\r\n        a.href = \"javascript:void(0)\";\r\n\r\n        // 数据前十名/数据10-20/数据20-30\r\n        if (res[i].light === \"large\") {\r\n          a.className = \"large\";\r\n        } else if (res[i].light === \"medium\") {\r\n          a.className = \"medium\";\r\n        } else if (res[i].light === \"small\") {\r\n          a.className = \"small\";\r\n        }\r\n\r\n        // 为每个词添加点击事件，触发反馈信息\r\n        a.addEventListener(\"click\", () => {\r\n          this.$emit(\"word-clicked\", res[i]);\r\n        });\r\n\r\n        fragment.append(a);\r\n      }\r\n      let tagsContainer = document.querySelector(\"#weightTags\");\r\n      tagsContainer.innerHTML = \"\";\r\n      tagsContainer.append(fragment);\r\n    },\r\n\r\n    // 鼠标悬停时触发 tooltip\r\n    onMouseMove: function (event) {\r\n      const canvas = document.getElementById(\"world-cloud-canvas\");\r\n      const tags = TagCanvas.tags; // 获取TagCanvas上的所有tag\r\n\r\n      for (let i = 0; i < tags.length; i++) {\r\n        const tag = tags[i];\r\n        const rect = tag.rect; // 获取每个 tag 的位置和尺寸\r\n\r\n        if (\r\n            event.clientX >= rect[0] && event.clientX <= rect[0] + rect[2] &&\r\n            event.clientY >= rect[1] && event.clientY <= rect[1] + rect[3]\r\n        ) {\r\n          // 如果鼠标在当前词上\r\n          const tooltip = document.getElementById(\"tooltip\");\r\n          tooltip.innerHTML = `词语: ${tag.name}<br>更多信息: ${tag.extraInfo || '无'}`;\r\n          tooltip.style.display = \"block\"; // 显示 tooltip\r\n          tooltip.style.left = `${event.clientX + 10}px`;\r\n          tooltip.style.top = `${event.clientY + 10}px`;\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    // 鼠标移出时隐藏 tooltip\r\n    onMouseOut: function () {\r\n      const tooltip = document.getElementById(\"tooltip\");\r\n      tooltip.style.display = \"none\"; // 隐藏 tooltip\r\n    }\r\n  },\r\n  watch: {\r\n    // 如果词云发生变化就要重绘 tagcanvas\r\n    wordArr: function () {\r\n      this.startWorldCloud(true);\r\n    },\r\n  },\r\n  mounted() {\r\n    // 组件装载成果 绘制 tagcanvas\r\n    this.startWorldCloud();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.world-cloud-3d {\r\n  .world-cloud-canvas-wrapper {\r\n    width: 600px;\r\n    height: 400px;\r\n    max-width: 600px;\r\n    max-height: 400px;\r\n    overflow: visible; // 确保文字不被截断\r\n    padding: 20px; // 给文字和边界预留空间\r\n  }\r\n\r\n  #weightTags {\r\n    font-size: 12px;\r\n    .large {\r\n      font-size: 70px;\r\n      color: #E64A19;  /* 标准橙红 */\r\n    }\r\n    .medium {\r\n      font-size: 55px;\r\n      color: #e4ae77;\r\n    }\r\n    .small {\r\n      font-size: 35px;\r\n      color: #FFAB40;  /* 金橙色 */\r\n    }\r\n  }\r\n\r\n  /* Tooltip 样式 */\r\n  #tooltip {\r\n    position: absolute;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    color: white;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n    pointer-events: none; /* 防止 Tooltip 阻止其他元素的鼠标事件 */\r\n    z-index: 9999;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}